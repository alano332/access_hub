name: Build and Release Development Version

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Compile application with Nuitka
        working-directory: ./source
        run: |
          nuitka --assume-yes-for-downloads --follow-imports --standalone --windows-console-mode=disable --include-package=tools --include-package=gui --include-package=pwnedpasswords --include-package=accessible_output3 access_hub.py

      - name: Copy missing Python packages to build directory
        shell: pwsh
        run: |
          $SITEPACKAGES = $(python -c "import sysconfig; print(sysconfig.get_paths()['purelib'])")
          Write-Host "Site-packages found at: $SITEPACKAGES"
          $DEST_DIR = ".\source\access_hub.dist"
          $PACKAGES_TO_COPY = "langdetect", "accessible_output3", "pwnedpasswords", "passwordmeter"
          foreach ($pkg in $PACKAGES_TO_COPY) {
            $SOURCE_PATH = Join-Path $SITEPACKAGES $pkg
            if (Test-Path $SOURCE_PATH) {
              Write-Host "Copying package: $pkg"
              Copy-Item -Path $SOURCE_PATH -Destination $DEST_DIR -Recurse -Force
            } else {
              Write-Error "Could not find package '$pkg' at path '$SOURCE_PATH'"
              exit 1
            }
          }

      - name: Copy local DLLs and folders
        shell: pwsh
        run: |
          $SOURCE_DIR = ".\source"
          $DEST_DIR = ".\source\access_hub.dist"

          Write-Host "Copying local files to $DEST_DIR"
          Copy-Item -Path (Join-Path $SOURCE_DIR "libvlc.dll") -Destination $DEST_DIR
          Copy-Item -Path (Join-Path $SOURCE_DIR "libvlccore.dll") -Destination $DEST_DIR
          Copy-Item -Path (Join-Path $SOURCE_DIR "plugins") -Destination $DEST_DIR -Recurse -Force
          Copy-Item -Path (Join-Path $SOURCE_DIR "icon.ico") -Destination $DEST_DIR

      - name: Create Zip Archive of the build
        shell: pwsh
        run: |
          Compress-Archive -Path .\source\access_hub.dist\* -DestinationPath access_hub-dev-build.zip -CompressionLevel Optimal

      - name: Publish Development Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-dev"
          prerelease: true
          title: "Latest development release"
          files: |
            access_hub-dev-build.zip